name: Deploy Cloud Functions

on:
  workflow_call:
    inputs:
      function_name:
        description: 'Cloud Functionの名前'
        required: true
        type: string
      project_id:
        description: '関数をデプロイするGoogle CloudプロジェクトID'
        required: true
        type: string
      region:
        description: '関数を配置するGoogle Cloudリージョン'
        required: true
        type: string
      service_account_name:
        description: 'サービスアカウント名（例: my-sa-name）'
        required: true
        type: string
      gcp_project_number:
        description: 'Google Cloudプロジェクト番号（Workload Identity用）'
        required: true
        type: string
      wip_pool_name:
        description: 'Workload Identityプール名'
        required: false
        type: string
        default: 'github-actions-pool'
      wip_provider_name:
        description: 'Workload Identityプロバイダー名'
        required: false
        type: string
        default: 'github-provider'
      secrets_project_id:
        description: 'シークレットが格納されているGoogle CloudプロジェクトID（未設定時はfunctionのproject_idを使用）'
        required: false
        type: string
      secrets_config:
        description: 'シークレット名の複数行文字列（例: "SECRET_A\nSECRET_B"）'
        required: true
        type: string
      runtime:
        description: 'Cloud Functionのランタイム（例: php82）'
        required: false
        type: string
        default: 'php82'
      source_dir:
        description: '関数コードのソースディレクトリ'
        required: false
        type: string
        default: './'
      max_instance_count:
        description: '関数の最大インスタンス数'
        required: false
        type: number
        default: 1
      deploy_http_trigger:
        description: 'HTTPトリガー関数をデプロイするかどうか'
        required: false
        type: boolean
        default: true
      http_entry_point:
        description: 'HTTPトリガー関数のエントリポイント'
        required: false
        type: string
        default: 'main_http'
      deploy_event_trigger:
        description: 'イベントトリガー関数をデプロイするかどうか'
        required: false
        type: boolean
        default: true
      event_entry_point:
        description: 'イベントトリガー関数のエントリポイント'
        required: false
        type: string
        default: 'main_event'
      event_trigger_pubsub_topic_suffix:
        description: 'イベントトリガーPub/Subトピックのサフィックス（function_nameに付加されます）'
        required: false
        type: string
        default: '-event'

permissions:
  contents: 'read'
  id-token: 'write'

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      # Determine the project ID for secrets. Use inputs.secrets_project_id if provided, otherwise default to inputs.project_id
      SECRETS_PROJECT_FOR_CONSTRUCTION: ${{ inputs.secrets_project_id || inputs.project_id }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: 'true'
          
      - name: Google Cloud認証
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: 'projects/${{ inputs.gcp_project_number }}/locations/global/workloadIdentityPools/${{ inputs.wip_pool_name }}/providers/${{ inputs.wip_provider_name }}'
          service_account: '${{ inputs.service_account_name }}@${{ inputs.project_id }}.iam.gserviceaccount.com'

      - name: Prepare Secrets Configuration
        id: prep_secrets
        shell: bash
        run: |
          echo "--- Debugging secrets_config_input ---"
          echo "${{ inputs.secrets_config }}"
          echo "--- End Debugging ---"

          secrets_config_input="${{ inputs.secrets_config }}"
          secrets_array=()
          # IFS=$'\n' を使って改行区切りで配列に格納
          # read -d '' -ra はbashの拡張機能で、null文字を区切り文字として読み込みます。
          # これにより、inputs.secrets_config に最後に改行があっても空行として扱われません。
          IFS=$'\n' read -d '' -ra secrets_array <<< "$secrets_config_input"

          secrets_output=""
          for secret_name in "${secrets_array[@]}"; do
            # 空行はスキップ
            if [ -n "$secret_name" ]; then
              # 最初の要素でなければカンマを追加
              if [ -n "$secrets_output" ]; then
                secrets_output="${secrets_output}," 
              fi
              secrets_output="${secrets_output}${secret_name}=projects/${{ env.SECRETS_PROJECT_FOR_CONSTRUCTION }}/secrets/${secret_name}/versions/latest"
              echo "Building secrets_output (in main shell): '$secrets_output'" # メインシェルでの値をログ出力
            fi
          done
          
          echo "secrets_output after loop (main shell before GITHUB_OUTPUT): '$secrets_output'"

          echo "formatted_secrets<<EOF" >> "$GITHUB_OUTPUT"
          echo -e "$secrets_output" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

          echo "--- Debugging GITHUB_OUTPUT ---"
          # GITHUB_OUTPUTに書き込まれた値を確認するために、
          # このステップの直後にformatted_secretsを参照する別のステップを追加し、
          # そのステップでechoしてみてください。
          echo "--- End Debugging ---"

      - name: Secrets
        shell: bash
        run: echo "${{ steps.prep_secrets.outputs.formatted_secrets }}"

      - name: Deploy Cloud Functions (http)
        if: inputs.deploy_http_trigger
        uses: 'google-github-actions/deploy-cloud-functions@v3'
        timeout-minutes: 5
        with:
          name: ${{ inputs.function_name }}
          project_id: ${{ inputs.project_id }}
          region: ${{ inputs.region }}
          runtime: ${{ inputs.runtime }}
          entry_point: ${{ inputs.http_entry_point }}
          service_account: '${{ inputs.service_account_name }}@${{ inputs.project_id }}.iam.gserviceaccount.com'
          source_dir: ${{ inputs.source_dir }}
          max_instance_count: ${{ inputs.max_instance_count }}
          secrets: ${{ steps.prep_secrets.outputs.formatted_secrets }}

      - name: Deploy Cloud Functions (event)
        if: inputs.deploy_event_trigger
        uses: 'google-github-actions/deploy-cloud-functions@v3'
        timeout-minutes: 5
        with:
          name: ${{ inputs.function_name }}${{ inputs.event_trigger_pubsub_topic_suffix }}
          project_id: ${{ inputs.project_id }}
          region: ${{ inputs.region }}
          runtime: ${{ inputs.runtime }}
          entry_point: ${{ inputs.event_entry_point }}
          event_trigger_type: google.cloud.pubsub.topic.v1.messagePublished
          event_trigger_pubsub_topic: projects/${{ inputs.project_id }}/topics/${{ inputs.function_name }}${{ inputs.event_trigger_pubsub_topic_suffix }}
          service_account: '${{ inputs.service_account_name }}@${{ inputs.project_id }}.iam.gserviceaccount.com'
          source_dir: ${{ inputs.source_dir }}
          max_instance_count: ${{ inputs.max_instance_count }}
          secrets: ${{ steps.prep_secrets.outputs.formatted_secrets }}
